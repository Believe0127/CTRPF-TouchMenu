00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000018 t __tcf_0
070012d0 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07001334 000000c0 T CTRPluginFramework::main()
070013f4 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070014d8 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
070016b8 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
070016bc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001740 000001f4 T CTRPluginFramework::DrawTouchMenu(CTRPluginFramework::Screen const&)
07001934 0000003c W CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
07001970 00000294 T CTRPluginFramework::TouchMenu()
07001c04 T svcCustomBackdoor
07001c0c T svcConvertVAToPA
07001c14 T svcFlushDataCacheRange
07001c1c T svcInvalidateEntireInstructionCache
07001c24 T svcMapProcessMemoryEx
07001c38 T svcUnmapProcessMemoryEx
07001c40 T svcControlProcess
07001c48 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07001e84 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07001edc 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07001ef0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07001f18 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07001f34 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07001f5c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07001f84 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07002030 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07002128 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070021b8 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07002438 00000048 T CTRPluginFramework::Screenshot::Initialize()
07002480 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
070027f4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07002884 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07002b84 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07002bc0 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07002c94 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07002cb8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07002cb8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07002d28 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07002e28 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07002e78 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07002f58 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07002fb4 00000028 T CTRPluginFramework::ScreenImpl::Release()
07002fdc 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700304c 00000040 T CTRPluginFramework::ScreenImpl::Flush()
0700308c 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07003124 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07003168 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07003234 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700323c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07003298 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070032e8 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07003324 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
070033b0 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07003420 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07003450 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
070034b0 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
070034c4 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
070034e0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
070034fc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07003504 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700350c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07003514 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07003530 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700354c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
070035a0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
070035cc 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07003624 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07003680 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07003704 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07003884 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07003a78 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07003b18 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07003d04 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07003d34 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07003d80 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07004048 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700410c 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07004180 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070042cc 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070042ec 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700430c 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07004338 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700436c 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07004394 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070043bc 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070043dc 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700440c 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07004454 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07004498 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070045dc 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07004608 00000040 t __tls_init
07004608 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07004648 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07004694 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004730 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070047c4 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004874 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07004930 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070049e8 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07004a7c 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07004ae0 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07004b8c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07004bbc 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07004bcc 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07004d38 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07004d90 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07004d90 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07004ec0 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07004fa0 000000d0 T CTRPluginFramework::InstallOSD()
07005070 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
0700511c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700511c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
070051d8 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
070051d8 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07005200 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070052b4 000001a4 T CTRPluginFramework::OSDImpl::Update()
07005458 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
070054b0 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07005578 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
07005b58 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07005be4 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07005c78 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07005ce8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07005ce8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07005cec 00000014 T CTRPluginFramework::FloatingButton::Draw()
07005d00 00000014 T CTRPluginFramework::FloatingButton::operator()()
07005d14 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07005d2c 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07005ec4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07005ec4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07005f04 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07005f2c 00000038 W CTRPluginFramework::File::~File()
07005f2c 00000038 W CTRPluginFramework::File::~File()
07005f64 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07005f88 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07005fac 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07005fac 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07005fe4 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07005fec 00000008 T CTRPluginFramework::BMPImage::Width() const
07005ff4 00000008 T CTRPluginFramework::BMPImage::Height() const
07005ffc 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07006004 00000010 T CTRPluginFramework::BMPImage::data() const
07006014 0000001c T CTRPluginFramework::BMPImage::end() const
07006030 00000014 W CTRPluginFramework::BMPImage::DataClear()
07006044 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07006044 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070060d0 00000034 T CTRPluginFramework::BMPImage::Unload()
07006104 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700614c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700617c 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700624c 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
070062b8 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
070062dc 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
070063f8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070063f8 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700644c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700644c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070064bc 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006698 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
070067c4 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
07006898 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
070068a0 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700699c 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
07006cb4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006cb4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006d64 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07006dbc 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07006de8 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07006ef0 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
07006fe4 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07007044 00000004 T CTRPluginFramework::Preferences::Initialize()
07007048 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0700725c 000000bc T CTRPluginFramework::Preferences::LoadSettings()
07007318 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07007374 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07007430 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
070074ec 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07007644 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070076d4 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700777c 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07007988 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07007a30 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07007a5c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007ab4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07007af4 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007bb0 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07007c04 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07007c3c 0000005c T CTRPluginFramework::InitializeRandomEngine()
07007c98 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07007d18 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07007d74 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07007dd0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07007e14 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07007e70 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07007ef0 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07007f48 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07007fc0 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07007ff4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008004 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008060 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
070080b0 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0700818c 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008428 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700852c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07008560 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700869c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700869c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070086ec 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07008710 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008790 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008e90 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008e98 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008edc 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07008fa4 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07008ff8 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07009078 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07009094 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070090ec 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070090ec 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700914c 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07009168 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070091c8 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07009224 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07009248 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700925c 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009270 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07009374 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07009374 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
070093a0 00000018 T CTRPluginFramework::LineReader::~LineReader()
070093a0 00000018 T CTRPluginFramework::LineReader::~LineReader()
070093b8 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07009414 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009510 00000028 T CTRPluginFramework::Touch::IsDown()
07009538 00000028 T CTRPluginFramework::Touch::GetPosition()
07009560 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07009560 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07009564 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07009568 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07009598 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070095b0 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
070095b8 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
07009664 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07009698 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07009698 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07009744 00000048 T CTRPluginFramework::Task::Start() const
0700978c 0000004c T CTRPluginFramework::Task::Start(void*) const
070097d8 00000064 T CTRPluginFramework::Task::Wait() const
0700983c 00000010 T CTRPluginFramework::System::IsNew3DS()
0700984c 00000010 T CTRPluginFramework::System::Reboot()
0700985c 00000010 T CTRPluginFramework::Process::GetHandle()
0700986c 00000010 T CTRPluginFramework::Process::GetTitleID()
0700987c 00000024 T CTRPluginFramework::Process::GetTextSize()
070098a0 00000008 T CTRPluginFramework::Process::Pause()
070098a8 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070098b8 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07009960 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07009964 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070099b0 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070099d0 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070099f0 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07009a10 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07009a34 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009a90 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009ac8 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07009ad4 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07009afc 00000048 T CTRPluginFramework::Hook::Hook()
07009afc 00000048 T CTRPluginFramework::Hook::Hook()
07009b44 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07009b44 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07009b6c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07009b6c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07009b80 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07009be4 00000050 T CTRPluginFramework::Hook::~Hook()
07009be4 00000050 T CTRPluginFramework::Hook::~Hook()
07009c34 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07009c50 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07009c78 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07009c88 0000001c T CTRPluginFramework::Hook::IsEnabled()
07009ca4 00000120 T CTRPluginFramework::Hook::Enable()
07009dc4 00000030 T CTRPluginFramework::Hook::Disable()
07009df4 00000008 T CTRPluginFramework::Hook::GetContext() const
07009dfc 0000000c T CTRPluginFramework::FwkSettings::Get()
07009e08 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07009ed4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07009f2c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07009f70 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a02c 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700a120 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700a1f8 00000008 T CTRPluginFramework::File::Tell() const
0700a200 0000002c T CTRPluginFramework::File::Rewind() const
0700a22c 00000030 T CTRPluginFramework::File::Flush() const
0700a25c 00000064 T CTRPluginFramework::File::GetSize() const
0700a2c0 00000008 T CTRPluginFramework::File::IsOpen() const
0700a2c8 00000044 T CTRPluginFramework::File::File()
0700a2c8 00000044 T CTRPluginFramework::File::File()
0700a30c 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700a30c 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700a334 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0700a3ac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a3ac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a418 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a4ac 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a580 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a604 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a6a4 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700a6b8 000000a8 T CTRPluginFramework::File::Close() const
0700a760 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700a8dc 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a8dc 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a938 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700a9d4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700aa2c 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
0700aaa4 00000048 T CTRPluginFramework::Directory::Close() const
0700aaec 00000008 T CTRPluginFramework::Directory::IsOpen() const
0700aaf4 00000040 T CTRPluginFramework::Directory::Directory()
0700aaf4 00000040 T CTRPluginFramework::Directory::Directory()
0700ab34 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700ab68 0000007c T CTRPluginFramework::Directory::~Directory()
0700ab68 0000007c T CTRPluginFramework::Directory::~Directory()
0700abe4 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700ac44 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700ac44 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700ac90 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0700aca4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ad3c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ade0 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aeb4 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af48 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700aff4 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
0700b000 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0700b090 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b1a8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b1e4 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b2c0 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b40c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b40c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b464 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700b464 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700b480 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700b59c 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
0700b620 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700b688 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700b73c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
0700b780 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700b96c 00000288 T CTRPluginFramework::Directory::_List() const
0700bbf4 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700bcc8 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700bda4 0000003c T CTRPluginFramework::Controller::Update()
0700bde0 00000018 T CTRPluginFramework::Clock::Clock()
0700bde0 00000018 T CTRPluginFramework::Clock::Clock()
0700bdf8 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
0700be24 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0700be5c 00000034 T CTRPluginFramework::Clock::Restart()
0700be90 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700be90 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700bf04 00000010 T CTRPluginFramework::PluginMenu::operator+=(void (*)()) const
0700bf14 00000004 T CTRPluginFramework::PluginMenu::Callback(void (*)()) const
0700bf18 00000048 T CTRPluginFramework::PluginMenu::Run() const
0700bf60 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700bf68 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700bf78 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0700bf84 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700bf84 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700bfb4 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700bfb4 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700bfcc 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700bfcc 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700c004 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700c024 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c024 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c06c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c06c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700c0a8 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700c0a8 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0700c0e8 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700c0f0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700c148 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700c208 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c208 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c250 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700c250 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700c2bc 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700c2bc 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0700c2ec 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0700c2f4 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0700c310 00000044 T CTRPluginFramework::Keyboard::Open() const
0700c354 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
0700c3ec 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700c3f4 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0700c3fc 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0700c404 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
0700c4d4 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
0700c568 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700c5f8 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700c6bc 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700c74c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700c810 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700c8a0 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0700c964 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700ca10 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
0700cae0 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700cbe4 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700cce8 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0700cdec 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700ce60 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700cee8 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0700cf58 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
0700cfb4 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0700d078 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0700d094 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700d0cc 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0700d130 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0700d17c 00000048 T CTRPluginFramework::Screen::DrawRect(unsigned long, unsigned long, unsigned long, unsigned long, CTRPluginFramework::Color const&, bool) const
0700d1c4 00000138 W __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > std::find<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (*)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
0700d2fc 000000e8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
0700d3e4 0000002c W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::push_back(bool (* const&)(CTRPluginFramework::Screen const&))
0700d410 00000048 T CTRPluginFramework::OSD::Stop(bool (*)(CTRPluginFramework::Screen const&))
0700d458 000000a4 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
0700d4fc 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0700d5e4 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700d66c 00000110 T CTRPluginFramework::Color::Fade(float)
0700d77c 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0700d7bc 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700d838 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0700da58 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0700db20 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700db28 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700db8c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700dbe4 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0700dbfc 00000028 T OnLoadCro
0700dc24 000000ac T CTRPluginFramework::ThreadExit()
0700dcd0 00000054 T abort
0700dd24 000000c8 T __entrypoint
0700ddec 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700ddec 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700de14 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700de94 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0700df08 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700df38 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
0700e628 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700e6d8 0000020c T CTRPluginFramework::Initialize()
0700e8e4 00000044 T CTRPluginFramework::ThreadInit(void*)
0700e928 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700e970 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0700e9a0 000000b8 t NCSNDCmd_Add
0700ea58 00000084 t NCSNDCmd_Execute.constprop.0
0700eadc 00000068 T ncsndNotifyAptEvent
0700eb44 00000004 t ncsndAptHook
0700eb48 000001c8 T ncsndInit
0700ed10 000000ac T ncsndExit
0700edbc 00000024 T ncsndInitializeSound
0700ede0 00000264 T ncsndPlaySound
0700f044 00000040 T ncsndStopSound
0700f084 00000090 T ncsndIsPlaying
0700f114 T LoadCROHooked
0700f128 T AR__ExecuteRoutine
0700f150 t stackBak
0700f158 0000003c T __syscall_getreent
0700f194 0000000c T __aeabi_read_tp
0700f1a0 0000003c T __getThreadLocalStorage
0700f1dc 00000070 T __syscall_gettod_r
0700f24c 00000004 T __syscall_lock_acquire
0700f250 00000004 T __syscall_lock_release
0700f254 00000004 T __syscall_lock_acquire_recursive
0700f258 00000004 T __syscall_lock_release_recursive
0700f25c 00000054 T initThreadVars
0700f2b0 0000005c T __system_initSyscalls
0700f30c 00000020 T __libctru_exit
0700f32c 0000001c T __appExit
0700f348 00000190 T __createThread
0700f4d8 00000110 T __startThread
0700f5e8 00000024 T threadGetHandle
0700f60c 0000002c T threadFree
0700f638 00000024 T threadJoin
0700f65c 00000020 T threadGetCurrent
0700f67c 0000003c T threadExit
0700f6b8 00000020 t _thread_begin
0700f6d8 0000004c T hidInitFake
0700f724 0000003c T hidExitFake
0700f760 0000002c T hidSetSharedMem
0700f78c 00000070 T plgLdrExit
0700f7fc 000000d4 T plgLdrInit
0700f8d0 00000050 T PLGLDR__GetPluginPath
0700f920 00000024 T PLGLDR__FetchEvent
0700f944 000000e8 T PLGLDR__Reply
0700fa2c 000000b0 T __system_allocateHeaps
0700fadc 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700fb08 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0700fb30 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700fc84 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0700fd04 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0700fd2c 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0700fd54 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700fdb8 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0700fe88 00000004 T __gsp__Update
0700fe8c 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07010114 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0701012c 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0701014c 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07010194 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
070101c8 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
070101ec 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07010210 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0701024c 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07010278 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07010308 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0701033c 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
070103e4 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07010560 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0701059c 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070105bc 000000ac T CTRPluginFramework::SystemImpl::Initialize()
07010668 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
070106b8 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070106d0 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
070106ec 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07010728 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07010748 00000044 T CTRPluginFramework::SystemImpl::Status()
0701078c 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0701079c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0701079c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
070107fc 00000098 T CTRPluginFramework::Scheduler::Initialize()
07010894 0000004c T CTRPluginFramework::Scheduler::Exit()
070108e0 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07010920 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
07010964 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
070109a4 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07010b48 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07010c4c 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07010ca4 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
07010de4 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07010f58 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07010f9c 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07011024 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07011070 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07011104 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07011140 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07011178 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
070111dc 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0701124c 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
070112e0 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07011388 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
070113c0 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
070113dc 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
070113f4 t _store_reg_loop
07011414 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07011420 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07011420 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07011448 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07011534 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
07011570 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701162c 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
07011a50 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07011abc 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07011b9c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07011ba8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07011bdc 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07011be8 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07011c00 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07011c40 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07011c84 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07011c94 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07011ca8 00000004 T Kernel::Initialize()
07011cac 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07011cc4 0000000c T KProcess::GetCurrent()
07011cd0 00000024 T KProcess::PatchCore2Access()
07011cf4 0000002c T KProcess::PatchCategory(unsigned long)
07011d20 00000014 T KProcess__PatchCategory
07011d34 0000002c T KProcess::PatchMaxPriority(unsigned long)
07011d60 00000014 T KProcess__PatchMaxPriority
07011d74 00000028 T KProcess::PatchMaxThreads()
07011d9c 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07011dbc 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07011dd0 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
07012010 00000044 W CTRPluginFramework::Lock::~Lock()
07012010 00000044 W CTRPluginFramework::Lock::~Lock()
07012054 000000d4 T CTRPluginFramework::HookManager::HookManager()
07012054 000000d4 T CTRPluginFramework::HookManager::HookManager()
07012128 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0701219c 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07012200 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
070122d0 0000000c T CTRPluginFramework::HookManager::Lock()
070122dc 0000000c T CTRPluginFramework::HookManager::Unlock()
070122e8 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07012350 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
070123c8 000000c8 T __hook__CheckTlsValue
07012490 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
070125d4 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07012658 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
070127b4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
070127c0 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07012804 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07012828 00000004 t addrMapNodeDestructor(rbtree_node*)
0701282c 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07012970 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07012978 0000006c T CTRPluginFramework::Heap::Free(void*)
070129e4 0000000c T CTRPluginFramework::Heap::SpaceFree()
070129f0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
070129fc 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07012a1c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07012a74 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012d28 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
07012d64 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07012f38 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07012f38 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07012ffc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07013008 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0701303c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0701303c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
070130dc 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0701312c 00000038 T CTRPluginFramework::EventManager::Clear()
07013164 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07013350 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
070133b8 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
070136a8 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07013774 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0701377c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070137d4 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
070137dc 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
070137e0 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
070137e4 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0701382c 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07013850 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07013894 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
070139bc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07013a4c 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
07013c4c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07013c58 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07013ca8 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07013ca8 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07013cec 0000001c T CTRPluginFramework::SubMenu::operator()()
07013d08 000001f8 T CTRPluginFramework::SubMenu::Draw()
07013f00 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07013fe0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07013fe8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07014004 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0701403c 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701403c 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070140c0 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701426c 00000028 t __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::move<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
07014294 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
070142c0 00000028 W CTRPluginFramework::Mutex::~Mutex()
070142c0 00000028 W CTRPluginFramework::Mutex::~Mutex()
070142e8 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
070142e8 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
070143f0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014410 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070145a0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070145c0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
070145dc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
070145f8 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
07014608 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
07014610 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014618 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014620 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07014620 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07014664 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
07014664 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0701468c 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0701468c 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
070146b4 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
070147ec 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
07014828 000000e8 W void std::vector<void (*)(), std::allocator<void (*)()> >::_M_realloc_insert<void (* const&)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
07014910 0000002c W std::vector<void (*)(), std::allocator<void (*)()> >::push_back(void (* const&)())
0701493c 00000098 T CTRPluginFramework::PluginMenuImpl::Callback(void (*)())
070149d4 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014ad8 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
07015228 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015278 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015318 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701541c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701541c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015490 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015628 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015748 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070158ec 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
07015934 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070159e4 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015a20 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07015b54 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07015c94 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015ca0 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07015cb4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015cb4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015e58 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07015e58 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701601c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07016074 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07016134 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07016220 000000bc t __tcf_1
070162dc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07016334 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701665c 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07016790 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016c28 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016d40 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016dd0 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07016e08 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07016e34 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016f20 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016fa4 00000080 T CTRPluginFramework::PluginMenuHome::Init()
07017024 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07017080 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07017140 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07017140 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070175ec 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701771c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701776c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070177f8 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07017ba4 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07017dc8 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
07017dec 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07017e50 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07017eb4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017eb4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07017ef0 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07018028 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
070181a4 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070181fc 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07018390 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070183a8 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07018490 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07018650 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07018738 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
070188f8 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
070189e0 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07018a68 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07018a7c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07018aa0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07018af8 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07018b38 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07018b78 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07018bcc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07018bf0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07018c18 00000030 W CTRPluginFramework::ARCode::~ARCode()
07018c18 00000030 W CTRPluginFramework::ARCode::~ARCode()
07018c48 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07018c7c 00000014 t __tcf_1
07018c90 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07018d10 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07018e30 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07018f14 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018f70 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
070190e8 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
07019204 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07019204 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07019458 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07019624 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07019728 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
070198a0 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070199c0 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
070199fc 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07019b48 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07019b84 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07019c88 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07019ef4 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07019fc0 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701a17c 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701a31c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701a32c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701a33c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701a34c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0701a354 00000024 t std::_Vector_base<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
0701a378 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701a378 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701a3a8 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
0701a3c8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701a3c8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701a4ac 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701a4cc 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701a4dc 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701a52c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701a544 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701a568 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0701a618 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701a628 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701a648 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701a730 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701a788 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a788 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a85c 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701a870 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701a8c8 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a8c8 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a8f0 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701a910 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701a918 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701a92c 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701a938 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701a940 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701a964 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701a994 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701a9b0 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701aa18 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701aa18 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701ab04 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701ad08 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701ad44 00000058 T CTRPluginFramework::Menu::CloseAll()
0701ad9c 00000030 T CTRPluginFramework::Menu::~Menu()
0701ad9c 00000030 T CTRPluginFramework::Menu::~Menu()
0701adcc 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701add8 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701ade0 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701ade8 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0701ae2c 000003b4 T CTRPluginFramework::Menu::Draw() const
0701b1e0 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
0701b278 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
0701b310 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701b558 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701b6c4 00000068 T CTRPluginFramework::Menu::ShowNote()
0701b72c 00000008 T CTRPluginFramework::Menu::CloseNote()
0701b734 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701b73c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b73c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b820 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b820 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b94c 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701b9a0 00000044 T CTRPluginFramework::Menu::Pop()
0701b9e4 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701ba98 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701baf0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0701bb18 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
0701bb50 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0701bb90 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
0701bba4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701bba4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701bc20 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701bc28 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0701bc30 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701bc38 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701bc40 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701bc48 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0701bc50 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
0701bcac 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701be78 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701c358 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0701c51c 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701c55c 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701c5c4 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701c654 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701c6d4 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701c758 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701c8b4 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
0701ca20 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701ca80 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701caf4 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701cb9c 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701d0b8 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701d0c0 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0701d0c0 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0701d0e8 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701d148 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0701d234 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0701d260 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0701d348 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0701d374 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701d634 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0701d698 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701d6f8 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701d74c 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701d7a0 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0701d7f8 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701d8ec 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701d940 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e054 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701e0d0 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0701e104 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e104 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e2dc 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e2dc 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e4a4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701e4d0 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701e5e8 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0701e6c0 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701e790 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701e860 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0701f11c 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701f228 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701f334 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0701f4dc 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701f524 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0701f578 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0701ffcc 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07020548 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07020ac4 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07020b04 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07020b50 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07020fec 00000368 T CTRPluginFramework::KeyboardImpl::Run()
07021354 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021354 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702138c 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070213b8 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070213b8 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070213bc 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070213bc 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070213c0 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070213c0 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070213c4 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070213dc 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070213f4 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0702140c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
070215a8 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
070216e4 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
070217d8 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07021818 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07021870 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070218b0 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
070218b0 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
070219fc 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07021a18 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07021a34 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07021aa8 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07021ad4 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07021b10 00000010 T CTRPluginFramework::HexEditor::Refresh()
07021b20 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07021b64 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07021b9c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07021bc8 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07021c48 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07021cdc 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07021da8 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07021e68 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07021f18 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
070220cc 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
070220dc 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
070220ec 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
070220fc 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0702213c 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
070221a8 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702227c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070222d4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07022358 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07022358 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07022558 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07022720 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07022804 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
070228bc 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07022b1c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07022ca0 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07022d30 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07022fe0 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07023250 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07023430 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07023490 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07023614 000001c8 T CTRPluginFramework::HexEditor::_Update()
070237dc 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07023a68 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07023ac0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07023b00 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07023b34 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07023e78 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07023e78 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07024060 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
07024134 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0702450c 0000015c T CTRPluginFramework::GuideReader::Draw()
07024668 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070246dc 000000e4 T CTRPluginFramework::Converter::Converter()
070246dc 000000e4 T CTRPluginFramework::Converter::Converter()
070247c0 00000010 T CTRPluginFramework::Converter::Instance()
070247d0 00000110 T CTRPluginFramework::Converter::_Draw()
070248e0 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
07024b08 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07024d20 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07024d4c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07024d88 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07024dc4 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07024e00 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07024e3c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07024e78 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
07024ea4 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07024ee0 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07024f1c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07024f58 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07024f94 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07024fc0 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07024ffc 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07025028 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07025054 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
07025080 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
070250bc 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070250e8 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07025124 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07025150 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07025184 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070251c0 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070251ec 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07025228 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07025254 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07025280 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070252ac 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070252d8 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07025304 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07025330 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702535c 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07025388 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070253c4 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070253f0 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702540c 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07025440 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07025440 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
070254fc 00000028 T CTRPluginFramework::Window::~Window()
070254fc 00000028 T CTRPluginFramework::Window::~Window()
07025524 00000064 T CTRPluginFramework::Window::Draw() const
07025588 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07025664 00000018 T CTRPluginFramework::Window::DrawButton() const
0702567c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07025694 00000018 T CTRPluginFramework::Window::MustClose() const
070256ac 00000028 T CTRPluginFramework::Window::Close() const
070256d4 00000004 T CTRPluginFramework::Window::GetRect() const
070256d8 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0702570c 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0702578c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070257ac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070257ac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070257c0 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
070257c0 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
070257e8 00000024 T CTRPluginFramework::UIContainer::Draw()
0702580c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07025840 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07025928 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0702595c 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0702595c 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070259d0 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
070259d8 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07025a0c 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07025ad8 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07025bc0 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07025bd8 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07025bec 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07025c04 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07025c4c 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07025c54 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07025c54 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07025d00 00000008 W CTRPluginFramework::Drawable::operator()()
07025d08 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07025dec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07025e44 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07025e44 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07025ed0 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07025ed0 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07025f88 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07025f88 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07026014 0000004c T CTRPluginFramework::TouchKey::Clear()
07026060 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07026060 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07026080 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070260a0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070260a8 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070260b0 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07026120 00000070 T CTRPluginFramework::TouchKey::Draw()
07026190 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07026198 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07026280 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026280 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026354 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07026354 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07026424 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702658c 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07026590 000002fc T CTRPluginFramework::TextBox::Draw()
0702688c 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
070268b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07026910 00000094 T CTRPluginFramework::TextBox::TextBox()
07026910 00000094 T CTRPluginFramework::TextBox::TextBox()
070269a4 0000000c T CTRPluginFramework::TextBox::Open() const
070269b0 0000000c T CTRPluginFramework::TextBox::Close() const
070269bc 00000008 T CTRPluginFramework::TextBox::IsOpen() const
070269c8 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07026bf0 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07026bfc 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07026c90 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07026d44 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07026d94 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07026e34 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
07027070 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07027070 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070271f4 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07027354 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07027480 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
0702759c 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07027740 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07027908 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702796c 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07027ba4 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0702814c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
070285d0 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07028644 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070286b4 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07028824 00000020 t __tcf_1
07028844 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07028a30 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07028bd4 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07028ce8 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07028d7c 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07028e20 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070290d8 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07029128 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0702922c 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07029268 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07029904 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07029aa0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
07029af4 0000000c T CTRPluginFramework::OSDImpl::Lock()
07029b00 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07029b1c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07029b28 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07029c10 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
07029da4 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07029e50 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07029e80 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07029f5c 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07029fd8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07029fd8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07029ff8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0702a018 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702a0b0 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
0702a0e8 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0702a148 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0702a158 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0702a160 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0702a16c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702a16c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702a1d4 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
0702a2c8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0702a2d8 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702a34c 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702a410 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702a410 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702a588 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702a588 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702a6e0 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0702a9a0 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
0702ab94 00000024 t fontGetSystemFont
0702abb8 00000010 T CTRPluginFramework::Glyph::Width() const
0702abc8 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0702b0ac 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0702b3f8 000000c4 T CTRPluginFramework::Font::Initialize()
0702b4bc 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0702b4d8 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0702b664 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0702b72c 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0702b858 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0702b8e4 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0702b904 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0702b94c 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0702b9c4 00000094 T CTRPluginFramework::ComboBox::Draw()
0702ba58 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702ba58 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702baac 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
0702bacc 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702bacc 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702bb18 0000003c T CTRPluginFramework::ComboBox::Clear()
0702bb54 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702bbd4 000000a8 T CTRPluginFramework::ComboBox::operator()()
0702bc7c 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702bccc 0000015c T CTRPluginFramework::Button::Draw()
0702be28 00000070 T CTRPluginFramework::Button::operator()()
0702be98 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0702c01c 00000038 T CTRPluginFramework::Button::~Button()
0702c01c 00000038 T CTRPluginFramework::Button::~Button()
0702c054 00000020 T CTRPluginFramework::Button::~Button()
0702c074 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c074 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c208 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c208 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c228 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c228 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702c2c0 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c2c0 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702c2d4 00000018 T CTRPluginFramework::Button::Enable(bool)
0702c2ec 00000010 T CTRPluginFramework::Button::Enable()
0702c2fc 00000010 T CTRPluginFramework::Button::Disable()
0702c30c 00000010 T CTRPluginFramework::Button::Lock()
0702c31c 00000010 T CTRPluginFramework::Button::Execute()
0702c32c 00000018 T CTRPluginFramework::Button::SetState(bool)
0702c344 00000010 T CTRPluginFramework::Button::GetState() const
0702c354 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702c35c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702c3b4 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
0702c4bc 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0702c4f4 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702c59c 00000140 T ARM_Disasm::Decode01(unsigned long)
0702c6dc 00000028 T ARM_Disasm::Decode10(unsigned long)
0702c704 00000078 T ARM_Disasm::Decode11(unsigned long)
0702c77c 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702c7d0 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702c820 00000110 T ARM_Disasm::DecodeALU(unsigned long)
0702c930 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702c9f4 00000030 T ARM_Disasm::Decode(unsigned long)
0702ca24 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702caa4 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702ce00 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702ce78 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702cee8 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702cf68 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702d3b0 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702d5d0 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702d674 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702d734 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702d7f4 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702d8a4 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702d934 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702daac 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702dbc0 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702dc24 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702dcb8 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702e00c 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702e308 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702e358 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e358 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e3d0 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702e3f0 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e3f0 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e43c 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702e4a4 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702e53c 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0702e66c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0702e690 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0702e6b4 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702e6d8 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0702e700 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702e728 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0702e750 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0702e850 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702e8a0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702e8c8 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702e9d4 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07030424 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070304d4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070304f4 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07030568 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070306b4 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07030a14 00000020 t __tcf_1
07030a34 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
07030a4c 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07030a74 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07030a8c 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07030adc 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030b2c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030b74 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07030b74 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07030bc4 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07030be4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07030c90 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07030cd0 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07030d38 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07030e28 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07030f2c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07030f3c 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07031054 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0703108c 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031544 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07031698 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07031de4 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07031e94 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07031fd4 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07032014 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703206c 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07032094 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032094 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032094 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032094 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
070320e0 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032124 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07032124 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07032144 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07032178 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070321d8 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07032218 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07032218 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703235c 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07032614 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032670 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
070326c0 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07032728 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070327d4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070327d4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0703284c 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032888 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070328bc 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07033d10 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07033d9c 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07033dfc 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07033e38 00000030 t __tcf_1
07033e68 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07033f94 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
07033fd0 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
070342c4 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703494c 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07034af4 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07034bb0 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035024 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070353f0 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
070355e4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703563c 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070356cc 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07035708 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07035708 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703572c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07035754 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07035754 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07035788 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07035838 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07035838 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07035948 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07035948 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07035a6c 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035b5c 00000084 T CTRPluginFramework::ARCode::Update()
07035be0 0000003c T CTRPluginFramework::ARCodeContext::Update()
07035c1c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07035cdc 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07035cfc 00000024 t __tcf_0
07035d20 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07035d20 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07035d48 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07035d94 00000048 T CTRPluginFramework::LineWriter::Flush()
07035ddc 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07035ddc 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07035df8 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035e5c 00000018 T CTRPluginFramework::LineWriter::Close()
07035e74 00000020 T CTRPluginFramework::Time::AsSeconds() const
07035e94 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07035ebc 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07035eec 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07035f7c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07035f7c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07035fb0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07035fb0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07035fd0 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07036024 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0703606c 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07036074 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
070361e4 00000218 T __ctrpf_getThreadVars
070363fc 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07036434 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0703646c 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
070364ac 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
070364b0 0000000c T CTRPluginFramework::Sound::Sound()
070364b0 0000000c T CTRPluginFramework::Sound::Sound()
070364bc 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
070364bc 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
070364d0 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070364d0 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07036504 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07036594 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07036604 00000058 T CTRPluginFramework::Sound::~Sound()
07036604 00000058 T CTRPluginFramework::Sound::~Sound()
0703665c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07036674 00000040 T CTRPluginFramework::Sound::Play(int, int)
070366b4 00000008 T CTRPluginFramework::Sound::Play(int)
070366bc 00000008 T CTRPluginFramework::Sound::Play()
070366c4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070366c4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070366ec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036744 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0703674c 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0703674c 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07036794 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070367c4 0000001c T CTRPluginFramework::HotkeyManager::Count()
070367e0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07036860 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
070368e8 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07036a20 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07036a9c 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07036b98 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07036c60 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07036da8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07036ddc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07036ddc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07036e0c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07036e14 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07036e14 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07036e24 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07036e24 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07036e40 00000384 t cwav_initialize
070371c4 000000f4 t cwav_stopImpl.part.0
070372b8 00000004 T cwavUseEnvironment
070372bc 00000034 T cwavSetVAToPACallback
070372f0 00000050 T cwavLoad
07037340 000004d8 T cwavPlay
07037818 00000064 T cwavStop
0703787c 00000170 T cwavFree
070379ec 0000003c T fontEnsureMappedExtension
07037a28 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07037a54 00000034 W MemPool::DelBlock(MemBlock*)
07037a88 0000005c T MemPool::CoalesceRight(MemBlock*)
07037ae4 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
07037be0 00000100 T MemPool::Deallocate(MemChunk const&)
07037ce0 00000020 T MemPool::GetFreeSpace()
07037d00 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07037d00 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07037dc4 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07037dcc 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
07037de4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07037de4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07037e0c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703809c 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07038344 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070385d4 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07038608 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07038924 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07038938 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0703894c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07038960 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07038964 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07038968 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07038990 000000bc t __tcf_1
07038a4c 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07038a8c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038ae4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07038b24 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07038b48 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07038b5c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07038b70 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07038b84 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07038b98 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07038bac 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07038bc0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07038bd4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07038be8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07038bfc 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07038d4c 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07038e98 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07038ed8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07038f58 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
070390d8 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07039198 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070391fc 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
07039d28 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07039d90 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07039e98 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07039e98 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0703a028 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703a0d4 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0703a144 00000114 W std::__cxx11::to_string(int)
0703a258 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0703a3e8 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703a554 00000048 t CTRPluginFramework::Reboot()
0703a59c 00000054 t CTRPluginFramework::Shutdown()
0703a5f0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0703a63c 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0703a778 000001fc t CTRPluginFramework::UpdateScreenshotText()
0703a974 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0703add4 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0703af04 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b068 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703b09c 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0703b0e0 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0703b73c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703b75c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703b7a4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0703b7e0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0703b7f0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703b848 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703b888 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0703b9a0 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0703b9f8 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0703ba08 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0703ba3c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0703ba68 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0703bad8 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0703bbc4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0703bc00 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0703bc80 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0703bce0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0703be4c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703be4c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703c2bc 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0703c520 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0703c560 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0703c60c 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0703c8c8 0000016c t CTRPluginFramework::ClearSearchFolder()
0703ca34 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0703cb1c 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0703d10c 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0703d148 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0703d438 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703d7e4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703d83c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703d87c 0000015c W std::__cxx11::to_string(unsigned long)
0703d9d8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703da8c 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703dae4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703db64 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703db64 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703dbf8 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703dbf8 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703dc98 00000198 T CTRPluginFramework::SearchMenu::Update()
0703de30 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703dfbc 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703e038 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0703e194 0000014c T CTRPluginFramework::SearchMenu::_Export()
0703e2e0 000005b8 T CTRPluginFramework::SearchMenu::Draw()
0703e898 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0703e9b8 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703eed0 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0703eef0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703eef0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703ef10 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703ef30 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0703ef88 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703ef88 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703f00c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f00c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f06c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f06c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f0cc 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0703f0d0 00000030 t CTRPluginFramework::GetIndex(int)
0703f100 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0703f234 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0703f2a8 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703f2a8 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703f314 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0703f3a8 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0703f574 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0703f5a0 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703f5a0 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703f5d8 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0703f6e8 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703f724 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f724 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f880 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f8d8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703f8d8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703f924 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703f9d4 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0703fa6c 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703fb5c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703fbdc 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703ff3c 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07040078 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
070400a0 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07040154 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07040184 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
070401d4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040240 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
070404c0 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
070407ec 00000004 T cwav_defaultVAToPA
070407f0 00000004 T cwavEnvUseEnvironment
070407f4 00000008 T cwavEnvGetEnvironment
070407fc 00000004 T cwavEnvInitialize
07040800 00000004 T cwavEnvFinalize
07040804 00000014 T cwavEnvCompatibleEncoding
07040818 00000008 T cwavEnvGetChannelAmount
07040820 00000018 T cwavEnvIsChannelAvailable
07040838 000000f4 T cwavEnvPlay
0704092c 00000004 T cwavEnvChannelIsPlaying
07040930 00000004 T cwavEnvStop
07040934 00000044 T CTRPluginFramework::Search::UpdateProgress()
07040978 00000048 T CTRPluginFramework::Search::Cancel()
070409c0 00000184 T CTRPluginFramework::Search::CheckNextRegion()
07040b44 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07040b9c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07040c1c 00000008 T CTRPluginFramework::Search::GetHeader() const
07040c24 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07040c6c 0000000c T CTRPluginFramework::Search::GetType() const
07040c78 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07040c90 00000070 T CTRPluginFramework::Search::WriteHeader()
07040d00 00000058 T CTRPluginFramework::Search::WriteResults()
07040d58 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07040da0 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07040e8c 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07040f10 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0704104c 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704104c 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704123c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0704123c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0704148c 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
070416b8 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
07041788 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0704184c 00000064 W CTRPluginFramework::Search::~Search()
0704184c 00000064 W CTRPluginFramework::Search::~Search()
070418b0 00000044 T CTRPluginFramework::Search32::~Search32()
070418b0 00000044 T CTRPluginFramework::Search32::~Search32()
070418f4 00000020 T CTRPluginFramework::Search32::~Search32()
07041914 00000024 W CTRPluginFramework::Search::~Search()
07041938 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07041938 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07041b3c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041b3c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041b5c 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07041b5c 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07041bf0 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07041cfc 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
07041eb0 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
07041fb0 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0704214c 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07042284 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070422d0 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07042414 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07042558 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07042594 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
070425fc 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070426d4 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07042710 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07042790 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07042888 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070428d4 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07042c00 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043520 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043e30 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044718 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704536c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070457f0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045c78 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070460f4 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704671c 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070473a4 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047b00 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047f08 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070485dc 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048e80 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070497a8 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a0cc 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704aeb0 00000084 W envGetHandle
0704af34 00000050 W envDestroyHandles
0704af84 00000094 T fontEnsureMapped
0704b018 00000100 T fontGlyphIndexFromCodePoint
0704b118 00000070 T fontGetCharWidthInfo
0704b188 00000074 T osConvertVirtToPhys
0704b1fc 00000054 T osGetTimeRef
0704b250 000000ec T osGetTime
0704b33c 0000012c T srvInit
0704b468 00000058 T srvExit
0704b4c0 000000a0 T srvGetServiceHandleDirect
0704b560 00000038 T srvGetServiceHandle
0704b598 00000038 T srvPublishToSubscriber
0704b5d0 0000000c T __sync_init
0704b5dc 00000018 T __sync_fini
0704b5f4 0000002c T syncArbitrateAddressWithTimeout
0704b620 0000001c T LightLock_Init
0704b63c 000000ac T LightLock_Lock
0704b6e8 00000040 T LightLock_Unlock
0704b728 00000024 T RecursiveLock_Init
0704b74c 00000030 T RecursiveLock_Lock
0704b77c 00000078 T RecursiveLock_TryLock
0704b7f4 00000054 T RecursiveLock_Unlock
0704b848 00000040 T LightEvent_Init
0704b888 000000a4 T LightEvent_Clear
0704b92c 00000048 T LightEvent_Pulse
0704b974 000000c8 T LightEvent_Signal
0704ba3c 000000a0 T LightEvent_Wait
0704badc 00000014 T LightSemaphore_Init
0704baf0 00000094 T LightSemaphore_Acquire
0704bb84 00000064 T LightSemaphore_Release
0704bbe8 000000b4 t mappableFindAddressWithin
0704bc9c 00000028 T mappableInit
0704bcc4 00000080 T mappableAlloc
0704bd44 00000004 T mappableFree
0704bd48 0000008c T acInit
0704bdd4 0000003c T acExit
0704be10 000000a4 T amInit
0704beb4 0000003c T amExit
0704bef0 00000158 T aptSendCommand
0704c048 00000030 T aptHook
0704c078 00000030 T aptUnhook
0704c0a8 00000028 T APT_PrepareToCloseApplication
0704c0d0 00000048 T APT_CloseApplication
0704c118 0000007c T APT_CheckNew3DS
0704c194 00000048 T APT_GetSharedFont
0704c1dc 000000a4 T cfguInit
0704c280 0000003c T cfguExit
0704c2bc 00000054 T CFGU_GetSystemLanguage
0704c310 000000cc T fsInit
0704c3dc 0000003c T fsExit
0704c418 000000cc T FSUSER_OpenFile
0704c4e4 000000bc T FSUSER_DeleteFile
0704c5a0 000000f8 T FSUSER_RenameFile
0704c698 000000bc T FSUSER_DeleteDirectoryRecursively
0704c754 000000d4 T FSUSER_CreateFile
0704c828 000000c4 T FSUSER_CreateDirectory
0704c8ec 000000f8 T FSUSER_RenameDirectory
0704c9e4 000000b4 T FSUSER_OpenDirectory
0704ca98 00000094 T FSUSER_OpenArchive
0704cb2c 00000058 T FSFILE_Read
0704cb84 00000060 T FSFILE_Write
0704cbe4 00000038 T FSFILE_GetSize
0704cc1c 00000028 T FSFILE_SetSize
0704cc44 0000003c T FSFILE_Close
0704cc80 00000024 T FSFILE_Flush
0704cca4 00000028 T FSFILE_SetPriority
0704cccc 00000050 T FSDIR_Read
0704cd1c 0000003c T FSDIR_Close
0704cd58 000000f0 T gspExit
0704ce48 00000024 W hidShouldUseIrrst
0704ce6c 0000018c T hidInit
0704cff8 000000e8 T hidExit
0704d0e0 000002a4 T hidScanInput
0704d384 00000010 T hidKeysHeld
0704d394 00000010 T hidKeysDown
0704d3a4 00000010 T hidKeysUp
0704d3b4 00000018 T hidTouchRead
0704d3cc 00000160 T irrstInit
0704d52c 000000cc T irrstExit
0704d5f8 000000b4 T irrstScanInput
0704d6ac 00000024 T irrstKeysHeld
0704d6d0 0000000c T srvPmGetSessionHandle
0704d6dc 000000b4 T sslcInit
0704d790 00000048 T sslcExit
0704d7d8 00000048 T sslcGenerateRandomData
0704d820 00000074 T rbtree_find
0704d894 00000010 T rbtree_init
0704d8a4 000001b0 t do_insert
0704da54 00000008 T rbtree_insert
0704da5c 00000318 T rbtree_remove
0704dd74 00000090 T rbtree_rotate
0704de04 00000064 T decode_utf16
0704de68 0000013c T decode_utf8
0704dfa4 00000054 T encode_utf16
0704dff8 000000e0 T encode_utf8
0704e0d8 000000c0 T utf8_to_utf16
0704e198 T svcQueryMemory
0704e1c8 T svcExitProcess
0704e1d0 T svcCreateThread
0704e1f0 T svcExitThread
0704e1f8 T svcSleepThread
0704e200 T svcSetThreadPriority
0704e208 T svcReleaseMutex
0704e210 T svcCreateEvent
0704e224 T svcSignalEvent
0704e22c T svcClearEvent
0704e234 T svcMapMemoryBlock
0704e23c T svcUnmapMemoryBlock
0704e244 T svcCreateAddressArbiter
0704e258 T svcArbitrateAddress
0704e270 T svcArbitrateAddressNoTimeout
0704e278 T svcCloseHandle
0704e280 T svcWaitSynchronization
0704e288 T svcWaitSynchronizationN
0704e2b0 T svcDuplicateHandle
0704e2c4 T svcGetSystemTick
0704e2cc T svcGetSystemInfo
0704e2e4 T svcGetProcessInfo
0704e2fc T svcConnectToPort
0704e310 T svcSendSyncRequest
0704e318 T svcOpenProcess
0704e32c T svcGetProcessId
0704e340 T svcGetThreadId
0704e354 T svcBreak
0704e35c T svcInvalidateProcessDataCache
0704e364 T svcFlushProcessDataCache
0704e36c T svcKernelSetState
0704e374 T svcQueryProcessMemory
0704e398 0000005c T rbtree_node_next
0704e3f4 00000004 T operator delete(void*)
0704e3f8 00000004 T operator delete(void*, std::nothrow_t const&)
0704e3fc 00000004 T operator delete(void*, unsigned int)
0704e400 00000004 T operator delete[](void*)
0704e404 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704e410 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704e41c 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704e428 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704e438 00000038 t (anonymous namespace)::init()
0704e470 00000024 t (anonymous namespace)::init_static_cond()
0704e494 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e494 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e4b4 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704e4e0 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e4e0 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e500 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704e52c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e52c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e54c 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704e578 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e578 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e598 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704e5c4 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704e5f0 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704e61c 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704e648 000001a4 T __cxa_guard_acquire
0704e7ec 000000b0 T __cxa_guard_release
0704e89c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704e89c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704e8bc 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704e8e8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704e8e8 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704e8f8 00000014 T std::get_new_handler()
0704e90c 0000005c T operator new(unsigned int)
0704e968 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704e984 00000004 T operator new[](unsigned int)
0704e988 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e988 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e9a8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704e9d4 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704eb0c 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704eb94 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ebd8 00000004 T std::type_info::~type_info()
0704ebd8 00000004 T std::type_info::~type_info()
0704ebdc 00000008 T std::type_info::__is_pointer_p() const
0704ebdc 00000008 T std::type_info::__is_function_p() const
0704ebe4 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704ebf8 00000014 T std::__detail::_List_node_base::_M_unhook()
0704ec0c 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704ec64 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704ecd4 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704ef58 0000002c T std::__throw_bad_alloc()
0704ef84 0000002c T std::__throw_bad_array_new_length()
0704efb0 00000040 T std::__throw_logic_error(char const*)
0704eff0 00000040 T std::__throw_invalid_argument(char const*)
0704f030 00000040 T std::__throw_length_error(char const*)
0704f070 00000040 T std::__throw_out_of_range(char const*)
0704f0b0 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704f0c0 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704f1a8 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704f288 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704f2cc 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704f320 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704f344 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
0704f484 0000000c T std::bad_alloc::what() const
0704f490 00000020 T std::bad_alloc::~bad_alloc()
0704f490 00000020 T std::bad_alloc::~bad_alloc()
0704f4b0 0000002c T std::bad_alloc::~bad_alloc()
0704f4dc 0000000c T std::bad_array_new_length::what() const
0704f4e8 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704f4e8 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704f508 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704f534 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704f590 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704f5a4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704f5a4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704f5c4 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704f5f0 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704f654 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704f6d0 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704f7a4 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704f8bc 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704f990 00000044 T __cxa_allocate_exception
0704f9d4 0000002c T __cxa_free_exception
0704fa00 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704fbb4 T __cxa_end_cleanup
0704fbc4 00000134 T __cxa_type_match
0704fcf8 000000b4 T __cxa_begin_cleanup
0704fdac 000000b4 T __gnu_end_cleanup
0704fe60 000000cc T __cxa_begin_catch
0704ff2c 000000e0 T __cxa_end_catch
0705000c 00000004 T std::exception::~exception()
0705000c 00000004 T std::exception::~exception()
07050010 00000004 T std::bad_exception::~bad_exception()
07050010 00000004 T std::bad_exception::~bad_exception()
07050014 0000000c T transaction clone for std::exception::what() const
07050014 0000000c T std::exception::what() const
07050020 0000000c T transaction clone for std::bad_exception::what() const
07050020 0000000c T std::bad_exception::what() const
0705002c 00000018 T std::bad_exception::~bad_exception()
07050044 0000003c t eh_globals_dtor(void*)
07050080 00000038 T __cxa_get_globals_fast
070500b8 00000074 T __cxa_get_globals
0705012c 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0705016c 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
070501a0 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0705030c 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07050364 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0705043c 000006a0 T __gxx_personality_v0
07050adc 00000014 T __cxxabiv1::__terminate(void (*)())
07050af0 00000018 T std::terminate()
07050b08 0000000c T __cxxabiv1::__unexpected(void (*)())
07050b14 00000018 T std::unexpected()
07050b2c 00000014 T std::get_terminate()
07050b40 00000014 T std::get_unexpected()
07050b54 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07050bb4 00000054 T __cxa_init_primary_exception
07050c08 00000054 T __cxa_throw
07050c5c 000000b0 T __cxa_rethrow
07050d0c 00000008 T std::logic_error::what() const
07050d0c 00000008 T std::runtime_error::what() const
07050d14 00000098 T std::logic_error::~logic_error()
07050d14 00000098 T std::logic_error::~logic_error()
07050dac 00000098 T std::length_error::~length_error()
07050dac 00000098 T std::length_error::~length_error()
07050e44 00000098 T std::invalid_argument::~invalid_argument()
07050e44 00000098 T std::invalid_argument::~invalid_argument()
07050edc 00000098 T std::out_of_range::~out_of_range()
07050edc 00000098 T std::out_of_range::~out_of_range()
07050f74 000000a0 T std::logic_error::~logic_error()
07051014 000000a0 T std::length_error::~length_error()
070510b4 000000a0 T std::invalid_argument::~invalid_argument()
07051154 000000a0 T std::out_of_range::~out_of_range()
070511f4 000000d4 T std::logic_error::logic_error(char const*)
070511f4 000000d4 T std::logic_error::logic_error(char const*)
070512c8 00000020 T std::invalid_argument::invalid_argument(char const*)
070512c8 00000020 T std::invalid_argument::invalid_argument(char const*)
070512e8 00000020 T std::length_error::length_error(char const*)
070512e8 00000020 T std::length_error::length_error(char const*)
07051308 00000020 T std::out_of_range::out_of_range(char const*)
07051308 00000020 T std::out_of_range::out_of_range(char const*)
07051328 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
070513ac 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
070513b0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07051420 0000002c T __cxa_call_terminate
0705144c 00000150 T __cxa_call_unexpected
070515a0 0000013c T ceil
070516dc 00000068 T roundf
07051748 0000027c T log2
070519c4 000000c0 T ceilf
07051a88 00000144 T floor
07051bcc 000000c0 T floorf
07051c8c 00000024 t with_errno
07051cb0 00000050 T __math_divzero
07051d00 0000001c T __math_invalid
07051d1c 00000044 T __popcountsi2
07051d60 00000030 T __aeabi_f2lz
07051d60 00000030 T __fixsfdi
07051d90 00000040 T __aeabi_f2ulz
07051d90 00000040 T __fixunssfdi
07051dd0 00000120 T __udivmoddi4
07051ef0 00000018 t selfrel_offset31
07051f08 00000090 t search_EIT_table
07051f98 00000040 t __gnu_unwind_get_pr_addr
07051fd8 0000010c t get_eit_entry
070520e4 00000088 t restore_non_core_regs
0705216c 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07052180 00000004 t _Unwind_DebugHook
07052184 00000064 t unwind_phase2
070521e8 00000140 t unwind_phase2_forced
07052328 000000a4 T __gnu_Unwind_RaiseException
070523cc 00000028 T __gnu_Unwind_ForcedUnwind
070523f4 00000074 T __gnu_Unwind_Resume
07052468 00000020 T __gnu_Unwind_Resume_or_Rethrow
07052488 00000004 T _Unwind_Complete
0705248c 00000018 T _Unwind_DeleteException
070524a4 0000006c T _Unwind_VRS_Get
07052510 0000002c t _Unwind_GetGR
0705253c 0000006c T _Unwind_VRS_Set
070525a8 0000002c t _Unwind_SetGR
070525d4 000000c0 T __gnu_Unwind_Backtrace
07052694 00000410 t __gnu_unwind_pr_common
07052aa4 00000008 T __aeabi_unwind_cpp_pr0
07052aac 00000008 W __aeabi_unwind_cpp_pr1
07052ab4 00000008 W __aeabi_unwind_cpp_pr2
07052abc 00000424 T _Unwind_VRS_Pop
07052ee0 00000064 t next_unwind_byte
07052f44 0000002c t _Unwind_GetGR.constprop.0
07052f70 00000004 t unwind_UCB_from_context
07052f74 00000464 T __gnu_unwind_execute
070533d8 00000048 T __gnu_unwind_frame
07053420 00000010 T _Unwind_GetRegionStart
07053430 0000001c T _Unwind_GetLanguageSpecificData
0705344c 00000008 T _Unwind_GetDataRelBase
07053454 00000008 T _Unwind_GetTextRelBase
0705345c 000000e4 T strncmp
07053540 00000130 T strchr
07053670 00000024 T getenv
07053694 0000005c T strlen
070536f0 00000150 T memmove
07053840 0000012c t iso_year_adjust
0705396c 0000126c t __strftime.isra.0
07054bd8 00000030 T strftime
07054c08 0000000c T abs
07054c14 00000064 t sulp
07054c78 000013a4 T _strtod_l
07056020 00000108 T strtof
07056128 00000010 T ctime
07056138 00000068 T sprintf
070561a0 000000e0 T memchr
07056280 000000f0 t rshift
07056370 0000089c T __gethex
07056c0c 000000d8 T memcmp
07056ce4 000001d8 t _strtoul_l.isra.0
07056ebc 00000030 T _strtoul_r
07056eec 00000034 T strtoul
07056f20 00000018 T isxdigit
07056f38 00000010 T _tzset_unlocked
07056f48 00000020 T calloc
07056f68 000000ac T _vsnprintf_r
07057014 00000038 T vsnprintf
0705704c 0000000c T labs
07057058 00000148 T _fclose_r
070571a0 0000000c T __gettzinfo
070571ac 000000c0 T _calloc_r
0705726c 00000020 T asctime
0705728c 0000012c T __smakebuf_r
070573b8 00000020 T realloc
070573d8 00000020 T memalign
070573f8 0000001c t stdio_exit_handler
07057414 0000005c t cleanup_stdio
07057470 00000154 t global_stdio_init.part.0
070575c4 0000005c T __sinit
07057620 0000000c T __sfp_lock_acquire
0705762c 0000000c T __sfp_lock_release
07057638 0000000c T __tz_lock
07057644 0000000c T __tz_unlock
07057650 0000079c T _malloc_r
07057dec 000000f8 T _malloc_trim_r
07057ee4 000002e8 T _free_r
070581cc 0000064c t get_arg
07058818 00003324 T _svfprintf_r
0705bb3c 00000018 T isspace
0705bb54 00000048 T strnlen
0705bb9c 00000664 T _tzset_unlocked_r
0705c200 0000000c T __errno
0705c20c 00000018 T malloc
0705c224 00000018 T free
0705c23c 0000011c T memcpy
0705c358 000000d4 T sniprintf
0705c42c 0000004c T time
0705c478 000000c8 T _findenv_r
0705c540 00000018 T _getenv_r
0705c558 000000f4 T memset
0705c64c 000004a0 T _realloc_r
0705caec 00000080 T asctime_r
0705cb6c 00000070 T _fwalk_sglue
0705cbdc 0000000c T __malloc_lock
0705cbe8 0000000c T __malloc_unlock
0705cbf4 00000254 T __tzcalc_limits
0705ce48 000000f0 T strcpy
0705cf38 00000014 T atexit
0705cf4c 00000020 T localtime
0705cf6c 000000d4 T snprintf
0705d040 000000c4 T strncpy
0705d104 0000025c t _strtoull_l.isra.0
0705d360 00000030 T _strtoull_r
0705d390 00000028 T _wcsrtombs_r
0705d3b8 0000064c t get_arg
0705da04 00002218 T _svfiprintf_r
0705fc1c 0000004c T __match
0705fc68 0000029c T __hexnan
0705ff04 00000084 T __libc_init_array
0705ff88 0000022c T __sflush_r
070601b4 00000094 T _fflush_r
07060248 00000010 T nan
07060258 0000000c T nanf
07060268 00000088 T frexp
070602f0 00000068 T siprintf
07060358 0000000c T __env_lock
07060364 0000000c T __env_unlock
07060370 0000005c T __assert_func
070603cc 00000088 T _Balloc
07060454 0000001c T _Bfree
07060470 000000f4 T __multadd
07060564 00000110 T __s2b
07060674 00000060 T __hi0bits
070606d4 0000009c T __lo0bits
07060770 000000a4 T __i2b
07060814 00000204 T __multiply
07060a18 00000128 T __pow5mult
07060b40 00000140 T __lshift
07060c80 00000058 T __mcmp
07060cd8 000001fc T __mdiff
07060ed4 00000068 T __ulp
07060f3c 000000d0 T __b2d
0706100c 00000124 T __d2b
07061130 00000078 T __ratio
070611a8 00000088 T __copybits
07061230 0000005c T __any_on
0706128c 00000024 T __locale_mb_cur_max
070612b0 000000a4 T __ssprint_r
07061354 0000003c T fiprintf
07061390 0000014c T _memalign_r
070614dc 00000188 T _wcsnrtombs_l
07061664 00000064 T _wcsnrtombs_r
070616c8 000002f8 T __utf8_mbtowc
070619c0 00000078 T siscanf
07061a38 00000044 T __sread
07061a7c 00000008 T __seofread
07061a84 00000068 T __swrite
07061aec 00000044 T __sseek
07061b30 00000008 T __sclose
07061b38 00000024 T _localeconv_r
07061b5c 000001b4 t quorem
07061d10 00001218 T _dtoa_r
07062f28 000000a0 T _wcrtomb_r
07062fc8 000001b0 t _strtol_l.part.0
07063178 00000060 T _strtol_r
070631d8 000000b0 T __register_exitproc
07063288 00000128 T __ssputs_r
070633b0 00000360 T localtime_r
07063710 000000f0 T __utf8_wctomb
07063800 00000268 T gmtime_r
07063a68 0000064c t get_arg
070640b4 00002300 T _vfiprintf_r
070663b4 000000b8 t __sbprintf
0706646c 00000050 t get_arg
070664bc 000000e0 T _sungetc_r
0706659c 0000006c T __ssrefill_r
07066608 000000c4 T _sfread_r
070666cc 000022cc T __ssvfiscanf_r
07068998 00000030 T __sprint_r
070689c8 00000008 T iswspace
070689d0 000000f0 T __sccl
07068ac0 000000b4 T _mbrtowc_r
07068b74 00000138 T __swsetup_r
07068cac 000000a8 T __submore
07068d54 00000038 T iswspace_l
07068d8c 000004b4 T __sfvwrite_r
07069240 00000234 t _strtoll_l.isra.0
07069474 00000030 T _strtoll_r
070694a4 00000090 T category
07069534 00000078 T _fstat_r
070695ac 0000002c T __getreent
070695d8 00000030 T _gettimeofday_r
07069608 0000003c T __get_handle
07069644 000000f4 T _close_r
07069738 00000008 t null_write
07069740 00000008 T _isatty_r
07069748 00000084 T _lseek_r
070697cc 00000080 T _read_r
0706984c 00000078 W _sbrk_r
070698c4 0000001c T __libc_lock_acquire
070698e0 0000001c T __libc_lock_release
070698fc 0000001c T __libc_lock_acquire_recursive
07069918 0000001c T __libc_lock_release_recursive
07069934 00000080 T _write_r
070699b4 00000038 T __aeabi_d2lz
070699b4 00000038 T __fixdfdi
070699f0 00000040 T __aeabi_d2ulz
070699f0 00000040 T __fixunsdfdi
07069a30 T _fini
0706c34b 00000a00 r font
0706cd4c 00000058 r CTRPluginFramework::g_OSDPattern
0706cda4 0000001c R vtable for CTRPluginFramework::FloatingButton
0706cdc0 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706cddc 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706cde4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706cdfc 00000004 R CTRPluginFramework::Color::SkyBlue
0706ce00 00000004 R CTRPluginFramework::Color::Orange
0706ce04 00000004 R CTRPluginFramework::Color::LimeGreen
0706ce08 00000004 R CTRPluginFramework::Color::ForestGreen
0706ce0c 00000004 R CTRPluginFramework::Color::Gainsboro
0706ce10 00000004 R CTRPluginFramework::Color::DimGrey
0706ce14 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706ce18 00000004 R CTRPluginFramework::Color::DarkGrey
0706ce1c 00000004 R CTRPluginFramework::Color::Brown
0706ce20 00000004 R CTRPluginFramework::Color::BlackGrey
0706ce24 00000004 R CTRPluginFramework::Color::Green
0706ce28 00000004 R CTRPluginFramework::Color::Gray
0706ce2c 00000004 R CTRPluginFramework::Color::Silver
0706ce30 00000004 R CTRPluginFramework::Color::Magenta
0706ce34 00000004 R CTRPluginFramework::Color::Cyan
0706ce38 00000004 R CTRPluginFramework::Color::Yellow
0706ce3c 00000004 R CTRPluginFramework::Color::Blue
0706ce40 00000004 R CTRPluginFramework::Color::Red
0706ce44 00000004 R CTRPluginFramework::Color::White
0706ce48 00000004 R CTRPluginFramework::Color::Black
0706d478 00000014 r CTRPluginFramework::defaultSoundFiles
0706d48c 00000014 V vtable for CTRPluginFramework::MenuItem
0706d4a0 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706d4b4 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706d4d0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706d4d8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706d4e0 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706d500 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706d520 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706d540 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706d548 0000001c R vtable for CTRPluginFramework::TouchKey
0706d564 0000001c R vtable for CTRPluginFramework::TextBox
0706d580 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706d59c 0000001c R vtable for CTRPluginFramework::ComboBox
0706d5b8 0000001c R vtable for CTRPluginFramework::Button
0706d5d8 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706d5e0 00000040 r RegNames
0706d620 00000010 r shift_names
0706d630 00000040 r cond_names
0706d670 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706d68c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706d694 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706d69c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706d6a4 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706d6b8 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706d6c4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706d748 00000008 R CTRPluginFramework::Time::Zero
0706d750 00000384 r UserManualFilled15_array
0706dad4 00000384 r Unsplash15_array
0706de58 00000384 r UnCheckedCheckbox_array
0706e1dc 000009c4 r TrashFilled25_array
0706eba0 000009c4 r Trash25_array
0706f564 00000384 r Star15_array
0706f8e8 00000384 r Shutdown15_array
0706fc6c 00000384 r Settings15_array
0706fff0 00000384 r Search15_array
07070374 000009c4 r Save25_array
07070d38 00001900 r Rocket40_array
07072638 00000384 r Restart15_array
070729bc 00000384 r RAM15_array
07072d40 000009c4 r PlusFilled25_array
07073704 000009c4 r Plus25_array
070740c8 00000384 r More15_array
0707444c 00000384 r Maintenance15_array
070747d0 000009c4 r KeyboardFilled25_array
07075194 000009c4 r Keyboard25_array
07075b58 000009c4 r InfoFilled25_array
0707651c 000009c4 r Info25_array
07076ee0 00000384 r HandCursor15_array
07077264 00000384 r Grid15_array
070775e8 000009c4 r GameControllerFilled25_array
07077fac 000009c4 r GameController25_array
07078970 00000384 r GameController15_array
07078cf4 00000384 r FolderFilled_array
07079078 00000384 r File15_array
070793fc 00000384 r EnterKeyFilled15_array
07079780 00000384 r EnterKey15_array
07079b04 000009c4 r EditFilled25_array
0707a4c8 000009c4 r Edit25_array
0707ae8c 000009c4 r DuplicateFilled25_array
0707b850 000009c4 r Duplicate25_array
0707c214 00000e10 r DefaultKeyboardCustomIcon_array
0707d024 000009c4 r CutFilled25_array
0707d9e8 000009c4 r Cut25_array
0707e3ac 00000384 r Controller15_array
0707e730 00000640 r CloseWindowFilled20_array
0707ed70 00000640 r CloseWindow20_array
0707f3b0 000009c4 r ClipboardFilled25_array
0707fd74 000009c4 r Clipboard25_array
07080738 00000384 r ClearSymbolFilled15_array
07080abc 00000384 r ClearSymbol15_array
07080e40 00000384 r CheckedCheckbox_array
070811c4 00000384 r CapsLockOnFilled15_array
07081548 00000384 r CapsLockOn15_array
070818cc 000009c4 r AddFavoriteFilled25_array
07082290 000009c4 r AddFavorite25_array
07082c54 00000384 r About15_array
07082fd8 00000023 r CTRPluginFramework::g_copyrightText
07082ffb 0000001e r CTRPluginFramework::g_ctrpfText
0708301c 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07083038 00000038 r CTRPluginFramework::stable
07083070 00000038 r CTRPluginFramework::ktable
070830a8 00000038 R vtable for CTRPluginFramework::Search
070830e0 00000038 R vtable for CTRPluginFramework::Search32
07083118 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07083140 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
0708314c 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07083178 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07083184 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
070831b0 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
070831bc 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
070831e4 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
070831f0 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07083204 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07083218 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
0708322c 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07083240 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07083264 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07083270 00000014 R vtable for __gnu_cxx::recursive_init_error
07083284 00000001 R std::nothrow
07083288 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070832b0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070832bc 0000002c R vtable for __cxxabiv1::__si_class_type_info
070832e8 0000000d R typeinfo name for std::type_info
070832f8 00000008 R typeinfo for std::type_info
07083300 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07083310 00000404 R std::__detail::__prime_list
07083714 00000018 V typeinfo name for std::_Sp_make_shared_tag
0708372c 0000000d R typeinfo name for std::bad_alloc
0708373c 0000000c R typeinfo for std::bad_alloc
07083748 00000014 R vtable for std::bad_alloc
0708375c 00000019 R typeinfo name for std::bad_array_new_length
07083778 0000000c R typeinfo for std::bad_array_new_length
07083784 00000014 R vtable for std::bad_array_new_length
07083798 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070837bc 0000000c R typeinfo for __cxxabiv1::__class_type_info
070837c8 0000002c R vtable for __cxxabiv1::__class_type_info
070837f4 0000000d R typeinfo name for std::exception
07083804 00000008 R typeinfo for std::exception
0708380c 00000012 R typeinfo name for std::bad_exception
07083820 0000000c R typeinfo for std::bad_exception
0708382c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0708384c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07083854 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07083878 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07083880 00000014 R vtable for std::bad_exception
07083894 00000010 R typeinfo name for std::logic_error
070838a4 0000000c R typeinfo for std::logic_error
070838b0 00000015 R typeinfo name for std::invalid_argument
070838c8 0000000c R typeinfo for std::invalid_argument
070838d4 00000011 R typeinfo name for std::length_error
070838e8 0000000c R typeinfo for std::length_error
070838f4 00000011 R typeinfo name for std::out_of_range
07083908 0000000c R typeinfo for std::out_of_range
07083914 00000014 R vtable for std::logic_error
07083928 00000014 R vtable for std::invalid_argument
0708393c 00000014 R vtable for std::length_error
07083950 00000014 R vtable for std::out_of_range
07083968 00000890 R __log2_data
070841f8 00000014 r fpinan.0
0708420c 00000014 r fpi.1
07084220 00000028 r tinytens
07084248 00000100 R __hexdig
07084348 000000fc R _C_time_locale
07084444 00000010 r zeroes.0
07084454 00000010 r blanks.1
07084464 00000101 R _ctype_
07084568 00000024 r mon_name.0
0708458c 00000015 r day_name.1
070845a4 00000010 r zeroes.0
070845b4 00000010 r blanks.1
070845c4 0000006c R __action_table
07084630 0000006c R __state_table
0708469c 00000100 R __chclass
0708479c 0000000c r p05.0
070847a8 00000028 R __mprec_bigtens
070847d0 000000c8 R __mprec_tens
07084898 00000060 R __month_lengths
070848f8 00000010 r zeroes.0
07084908 00000010 r blanks.1
07084918 00000022 r basefix.0
0708493c 000035dc r categories
07087f18 00000080 R dotab_stdnull
07087f98 R __tdata_align
070880f8 R __exidx_start
07088330 R __exidx_end
07088330 00000004 D CTRPluginFramework::Test1Color
07088334 00000004 D CTRPluginFramework::Test2Color
07088338 00000004 D CTRPluginFramework::Test3Color
0708833c 00000004 D CTRPluginFramework::cursory
07088340 00000004 D CTRPluginFramework::cursorx
07088344 00000004 D cwavCurrentVAPAConvCallback
07088348 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07088360 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
07088378 00000004 D CTRPluginFramework::Screenshot::Screens
0708837c 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07088380 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07088384 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708839c 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070883b4 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070883cc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070883d0 00000004 D CTRPluginFramework::FwkSettings::Header
070883d4 00000001 D CTRPluginFramework::g_keepRunning
070883d5 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070883d6 00000001 D CTRPluginFramework::SystemImpl::Language
070883d8 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070883f0 00000001 D CTRPluginFramework::EventManager::_refresh
070883f4 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070883f8 000001f4 D opcode_names
070885ec 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07088604 00000004 D g_charPerSheet
07088608 00000004 D UserManualFilled15
0708860c 00000004 D Unsplash15
07088610 00000004 D UnCheckedCheckbox
07088614 00000004 D TrashFilled25
07088618 00000004 D Trash25
0708861c 00000004 D Star15
07088620 00000004 D Shutdown15
07088624 00000004 D Settings15
07088628 00000004 D Search15
0708862c 00000004 D Save25
07088630 00000004 D Rocket40
07088634 00000004 D Restart15
07088638 00000004 D RAM15
0708863c 00000004 D PlusFilled25
07088640 00000004 D Plus25
07088644 00000004 D More15
07088648 00000004 D Maintenance15
0708864c 00000004 D KeyboardFilled25
07088650 00000004 D Keyboard25
07088654 00000004 D InfoFilled25
07088658 00000004 D Info25
0708865c 00000004 D HandCursor15
07088660 00000004 D Grid15
07088664 00000004 D GameControllerFilled25
07088668 00000004 D GameController25
0708866c 00000004 D GameController15
07088670 00000004 D FolderFilled
07088674 00000004 D File15
07088678 00000004 D EnterKeyFilled15
0708867c 00000004 D EnterKey15
07088680 00000004 D EditFilled25
07088684 00000004 D Edit25
07088688 00000004 D DuplicateFilled25
0708868c 00000004 D Duplicate25
07088690 00000004 D DefaultKeyboardCustomIcon
07088694 00000004 D CutFilled25
07088698 00000004 D Cut25
0708869c 00000004 D Controller15
070886a0 00000004 D CloseWindowFilled20
070886a4 00000004 D CloseWindow20
070886a8 00000004 D ClipboardFilled25
070886ac 00000004 D Clipboard25
070886b0 00000004 D ClearSymbolFilled15
070886b4 00000004 D ClearSymbol15
070886b8 00000004 D CheckedCheckbox
070886bc 00000004 D CapsLockOnFilled15
070886c0 00000004 D CapsLockOn15
070886c4 00000004 D AddFavoriteFilled25
070886c8 00000004 D AddFavorite25
070886cc 00000004 D About15
070886d0 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070886d4 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070886d8 00000004 d kCount
070886dc 00000004 d kInterval
070886e0 00000004 d kDelay
070886e4 00000004 D __cxxabiv1::__unexpected_handler
070886e8 00000004 D __cxxabiv1::__terminate_handler
070886ec 00000004 D _impure_ptr
070886f0 00000120 D _impure_data
07088810 00000058 d tzinfo
07088868 0000000c D __sglue
07088874 00000004 D __malloc_sbrk_base
07088878 00000004 D __malloc_trim_threshold
07088880 00000408 D __malloc_av_
07088c88 00000008 D _tzname
07088c90 0000016c D __global_locale
07088dfc 00000004 D environ
07088e00 00001000 d handles
07089e00 0000000c d __stderr_handle
07089e0c 0000000c d __stdout_handle
07089e18 0000000c d __stdin_handle
07089e24 0000008c D devoptab_list
07089ec4 d _GLOBAL_OFFSET_TABLE_
07089ed0 D __tdata_lma
07089edc d __frame_dummy_init_array_entry
07089edc D __init_array_start
07089edc B __preinit_array_end
07089edc B __preinit_array_start
07089edc D __tdata_lma_end
07089f44 d __do_global_dtors_aux_fini_array_entry
07089f44 D __init_array_end
07089fa0 D __bss_start__
07089fa0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089fac 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07089fb0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07089fb4 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089fb8 00000001 B CTRPluginFramework::Test1
07089fb9 00000001 B CTRPluginFramework::Test2
07089fba 00000001 B CTRPluginFramework::Test3
07089fbc 00000004 b ncsndMutex
07089fc0 00000004 b ncsndCmdCurOff
07089fc4 00000004 b ncsndCmdStartOff
07089fc8 00000004 B ncsndSharedMem
07089fcc 00000004 B ncsndCSNDHandle
07089fd0 00000004 b ncsndRefCount
07089fd4 00000004 B ncsndChannels
07089fd8 00000010 B ncsndOffsets
07089fe8 00000004 B ncsndSharedMemSize
07089fec 00000004 b ncsndSharedMemBlock
07089ff0 00000001 b ncsndCookieHooked
07089ff4 0000000c b ncsndCookie
0708a000 b saved_stack
0708a008 00000004 b cwavListCount
0708a00c 00000004 b cwavList
0708a010 00000004 b cwavAddedToList
0708a014 b completed.1
0708a018 b object.0
0708a030 00000004 b CTRPluginFramework::isReady
0708a034 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708a03c 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708a044 00000008 B CTRPluginFramework::Screenshot::_task
0708a050 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708a058 00000008 B CTRPluginFramework::Screenshot::_timer
0708a060 00000004 B CTRPluginFramework::Screenshot::_display
0708a064 00000004 B CTRPluginFramework::Screenshot::_filecount
0708a068 00000004 B CTRPluginFramework::Screenshot::_mode
0708a06c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708a070 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708a078 00000008 B CTRPluginFramework::Screenshot::Timer
0708a080 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708a084 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708a088 00000004 B CTRPluginFramework::ScreenImpl::Top
0708a08c 000000ac b CTRPluginFramework::_botBuf
0708a138 000000ac b CTRPluginFramework::_topBuf
0708a1e4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708a1e8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708a1f0 00000050 b CTRPluginFramework::g_fpsCounter
0708a240 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708a248 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708a250 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708a258 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708a260 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708a268 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708a269 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708a26a 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708a26c 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708a28c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708a298 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708a2a4 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708a2b0 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708a2d4 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708a2e0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708a2f8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708a310 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708a314 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708a318 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708a31c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708a31d 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708a31e 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708a320 000000a8 B CTRPluginFramework::Preferences::Settings
0708a3c8 00000008 B CTRPluginFramework::Preferences::Backlights
0708a3d0 00000008 B CTRPluginFramework::Preferences::Flags
0708a3d8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708a3dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708a3e0 000009c4 b CTRPluginFramework::g_rng
0708ada4 00000004 B CTRPluginFramework::System::OnAbort
0708ada8 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708adac 00000004 B CTRPluginFramework::Process::OnPauseResume
0708adb0 00000004 B CTRPluginFramework::Process::exceptionCallback
0708adb4 00000004 B CTRPluginFramework::Controller::_keysReleased
0708adb8 00000004 B CTRPluginFramework::Controller::_keysHeld
0708adbc 00000004 B CTRPluginFramework::Controller::_keysDown
0708adc0 00000004 b CTRPluginFramework::g_runningInstance
0708adc4 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708adc8 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708adcc 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708adce 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708add0 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708adec 00000004 b g_onLoadCroLock
0708adf0 00000004 b g_onSharedMemMapHook
0708adf4 00000004 b g_onLoadCroHook
0708adf8 00000008 b CTRPluginFramework::g_mainThread
0708ae00 00000004 B CTRPluginFramework::g_keepEvent
0708ae04 00000004 B CTRPluginFramework::g_keepThreadHandle
0708ae08 00000004 B CTRPluginFramework::g_continueGameEvent
0708ae10 00000008 B CTRPluginFramework::_sdmcArchive
0708ae18 00001000 b CTRPluginFramework::keepThreadStack
0708be18 00000004 b g_mainThreadVars
0708be1c 00000001 b properInit
0708be1d 00000001 b fakeInit
0708be20 00000004 b plgLdrRefCount
0708be24 00000004 b plgReply
0708be28 00000004 b plgEvent
0708be2c 00000004 b plgLdrArbiter
0708be30 00000004 b plgLdrHandle
0708be34 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708be38 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708be3c 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708be44 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708be4c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708be50 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708be58 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708be60 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708be68 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708be6c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708be70 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708be74 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708be78 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708be7c 00000008 b CTRPluginFramework::g_sleepEvent
0708be84 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708be88 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708be8c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708be90 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708be91 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708be92 00000001 B _g_isCitra
0708be94 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708bf3c 00000044 b CTRPluginFramework::g_previousException
0708bf80 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708bf84 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708bf88 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708bf90 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708bf9c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708bfa8 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708bfb8 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708bfbc 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708c020 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708c024 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708c028 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708c030 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708c034 00000004 B CTRPluginFramework::ProcessImpl::Status
0708c038 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708c03c 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708c040 0000001c B CTRPluginFramework::HookManager::_singleton
0708c05c 00000008 b CTRPluginFramework::Heap::g_heapPool
0708c064 0000000c b CTRPluginFramework::Heap::_mutex
0708c070 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708c074 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708c078 0000000c b sAddrMap
0708c084 0000000c B CTRPluginFramework::FSPath::FSMutex
0708c090 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708c094 00000001 B CTRPluginFramework::EventManager::_isTouching
0708c098 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708c09c 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708c0a8 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708c0ac 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708c0bc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708c0c0 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708c0cc 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708c0d0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708c0d4 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708c0d8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c0e0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c0e8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c0f0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c0f8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c0fc 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c104 00000004 b CTRPluginFramework::g_radioId
0708c108 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708c10c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c110 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708c118 00000004 b CTRPluginFramework::__pmARinstance
0708c11c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708c120 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708c124 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708c128 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c130 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c138 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c13c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708c14c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c150 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c158 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c15c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c16c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c170 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c180 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c184 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c194 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c198 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c1a8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c1ac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c1bc 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708c1c8 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708c1d4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708c1e0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c1e4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c1f4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708c1f8 00000004 B CTRPluginFramework::__g_hexEditor
0708c1fc 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708c200 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708c210 00000004 b CTRPluginFramework::__converter
0708c214 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708c224 00000028 B CTRPluginFramework::Window::TopWindow
0708c24c 00000028 B CTRPluginFramework::Window::BottomWindow
0708c274 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c278 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c284 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708c28c 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708c28d 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708c290 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708c29c 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708c2b8 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708c2bc 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708c2c0 0000000c B CTRPluginFramework::Font::_mutex
0708c2cc 00000004 B CTRPluginFramework::g_glyphAllocated
0708c2d0 00000004 B CTRPluginFramework::g_fontAllocated
0708c2d4 00000004 b CTRPluginFramework::g_context
0708c2d8 00000001 b CTRPluginFramework::ToggleFloat
0708c2d9 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708c2dc 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708c2e0 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708c2e4 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708c2e8 00000008 B CTRPluginFramework::ARHandler::Storage
0708c2f0 00000010 B CTRPluginFramework::ARHandler::Data
0708c300 00000008 B CTRPluginFramework::ARHandler::Offset
0708c308 00000fa0 b CTRPluginFramework::arStack
0708d2a8 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708d2ac 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708d2b8 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708d2bc 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708d2c8 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708d2c9 00000001 b CTRPluginFramework::g_newCondDataToggle
0708d2ca 00000001 b CTRPluginFramework::g_condAgainstData
0708d2cc 00000004 b CTRPluginFramework::__arCodeEditor
0708d2d0 0000000c B CTRPluginFramework::g_codeTypes
0708d2dc 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708d2e0 00000018 b __threads
0708d2f8 0000000c b __mutex
0708d304 0000001c b CTRPluginFramework::g_dummy
0708d320 00000180 b CTRPluginFramework::g_keyName
0708d4a0 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d4a4 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d4ac 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708d4b0 00000004 b CTRPluginFramework::g_screenshotEntry
0708d4b4 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708d4b8 00000004 b CTRPluginFramework::g_OpenFileLock
0708d4bc 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708d4c0 00000040 b CTRPluginFramework::g_hookExportFile
0708d500 00000004 b CTRPluginFramework::g_HookMode
0708d504 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708d508 00000008 b CTRPluginFramework::g_textXpos
0708d510 00000004 b CTRPluginFramework::g_mode
0708d514 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708d518 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708d528 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708d52c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708d53c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708d540 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708d548 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708d550 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708d558 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708d560 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708d570 00000001 b CTRPluginFramework::g_progressLoop
0708d574 00000004 B CTRPluginFramework::_pool
0708d578 00000004 b sharedFontAddr
0708d57c 00000004 B g_sharedFont
0708d580 00000004 b srvRefCount
0708d584 00000004 b srvHandle
0708d588 00000004 b arbiter
0708d58c 00000004 b currentAddr
0708d590 00000004 b maxAddr
0708d594 00000004 b minAddr
0708d598 00000004 b acRefCount
0708d59c 00000004 b acHandle
0708d5a0 00000004 b amRefCount
0708d5a4 00000004 b amHandle
0708d5a8 00000001 b flagValue.0
0708d5a9 00000001 b flagInit.1
0708d5ac 00000004 b serviceName.6
0708d5b0 0000000c b aptFirstHook
0708d5bc 00000004 b aptLockHandle
0708d5c0 00000004 b cfguRefCount
0708d5c4 00000004 b cfguHandle
0708d5c8 00000080 b fsExemptArchives
0708d648 00000004 b fsuRefCount
0708d64c 00000004 b fsuHandle
0708d650 00000001 b gspRunEvents
0708d654 00000004 b gspEventThread
0708d658 00000004 b gspEvent
0708d65c 00000001 b gspGpuRight
0708d660 00000004 b gspSharedMem
0708d664 00000004 b gspSharedMemHandle
0708d668 00000004 b gspRefCount
0708d66c 00000004 b gspGpuHandle
0708d670 00000001 b usingIrrst
0708d674 00000004 b hidRefCount
0708d678 00000006 b gRate
0708d680 00000006 b aVec
0708d688 00000004 b cPos
0708d68c 00000004 b tPos
0708d690 00000004 b kRepeat
0708d694 00000004 b kUp
0708d698 00000004 b kDown
0708d69c 00000004 b kHeld
0708d6a0 00000004 b kOld
0708d6a4 00000004 B hidSharedMem
0708d6a8 00000014 B hidEvents
0708d6bc 00000004 B hidMemHandle
0708d6c0 00000004 B hidHandle
0708d6c4 00000004 b irrstRefCount
0708d6c8 00000004 b csPos
0708d6cc 00000004 b kHeld
0708d6d0 00000004 B irrstSharedMem
0708d6d4 00000004 B irrstEvent
0708d6d8 00000004 B irrstMemHandle
0708d6dc 00000004 B irrstHandle
0708d6e0 00000004 b srvPmHandle
0708d6e4 00000004 b __sslc_refcount
0708d6e8 00000004 B __sslc_servhandle
0708d6ec 00000004 V __ctru_heap_size
0708d6f0 00000004 B __ctru_linear_heap
0708d6f4 00000004 B __ctru_heap
0708d6f8 00000004 b (anonymous namespace)::get_static_cond()::once
0708d700 00000008 b (anonymous namespace)::fake_cond
0708d708 00000004 b (anonymous namespace)::static_cond
0708d70c 00000004 b (anonymous namespace)::get_static_mutex()::once
0708d710 00000010 b (anonymous namespace)::fake_mutex
0708d720 00000004 b (anonymous namespace)::static_mutex
0708d724 00000004 b (anonymous namespace)::__new_handler
0708d728 0000001c b (anonymous namespace)::emergency_pool
0708d744 00000004 b init
0708d748 00000001 B __eh_globals_init::_S_init
0708d74c 0000000c b (anonymous namespace)::eh_globals
0708d758 00000010 V std::string::_Rep::_S_empty_rep_storage
0708d768 0000000c b __sfp_recursive_mutex
0708d778 00000168 B __sf
0708d8e0 00000004 B __stdio_exit_handler
0708d8e4 00000004 b __tz_mutex
0708d8e8 00000028 B __malloc_current_mallinfo
0708d910 00000004 B __malloc_max_total_mem
0708d914 00000004 B __malloc_max_sbrked_mem
0708d918 00000004 B __malloc_top_pad
0708d91c 00000004 b prev_tzenv
0708d920 0000000c b __tzname_dst
0708d92c 0000000c b __tzname_std
0708d938 0000000c b __malloc_recursive_mutex
0708d944 00000004 B _timezone
0708d948 00000004 B _daylight
0708d94c 0000000c b __env_recursive_mutex
0708d958 00000004 b initial_env
0708d95c 00000190 B __atexit0
0708daec 00000004 B __atexit
0708daf0 0000000c B __atexit_recursive_mutex
0708dafc 00000004 b __hndl_lock
0708db00 00000004 B fake_heap_start
0708db04 00000004 B fake_heap_end
0708db08 00000004 b heap_start.0
0708db0c B __tls_start
0708db38 B __bss_end__
0708db38 A __end__
0708db38 B __tls_end
